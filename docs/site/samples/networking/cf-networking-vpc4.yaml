AWSTemplateFormatVersion: '2010-09-09'
Description: ''
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.40.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      CidrBlock: 10.40.1.0/24
      MapPublicIpOnLaunch: false
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: Private Subnet AZ A
      AvailabilityZone:
        'Fn::Select':
          - '0'
          - 'Fn::GetAZs':
              Ref: 'AWS::Region'
  RouteTablePrivate1:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId:
        Ref: VPC
      Tags:
        - Key: Name
          Value: Private Route Table A
  RouteTablePrivate1Association1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId:
        Ref: RouteTablePrivate1
      SubnetId:
        Ref: PrivateSubnet1
  SgForecmessagesVPCEndpoint:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security group to allow access to ec2messages VPC Endpoint
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: '-1'
      VpcId:
        Ref: VPC
  ecmessagesVPCEndpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      ServiceName:
        'Fn::Join':
          - ''
          - - com.amazonaws.
            - Ref: 'AWS::Region'
            - .ec2messages
      VpcId:
        Ref: VPC
      SubnetIds:
        - Ref: PrivateSubnet1
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - Ref: SgForecmessagesVPCEndpoint
  SgForssmmessagesVPCEndpoint:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security group to allow access to ssmmessages VPC Endpoint
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: '-1'
      VpcId:
        Ref: VPC
  ssmmessagesVPCEndpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      ServiceName:
        'Fn::Join':
          - ''
          - - com.amazonaws.
            - Ref: 'AWS::Region'
            - .ssmmessages
      VpcId:
        Ref: VPC
      SubnetIds:
        - Ref: PrivateSubnet1
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - Ref: SgForssmmessagesVPCEndpoint
  SecurityGroup1:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Build a custom security group.
      VpcId:
        Ref: VPC
      SecurityGroupEgress:
        - FromPort: -1
          ToPort: -1
          IpProtocol: '-1'
          Description: ''
          CidrIp: 0.0.0.0/0
      SecurityGroupIngress:
        - FromPort: -1
          ToPort: -1
          IpProtocol: '-1'
          Description: ''
          CidrIp: 0.0.0.0/0
      GroupName: custom-sg
  SgForssmVPCEndpoint:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security group to allow access to ssm VPC Endpoint
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: tcp
          FromPort: 443
          ToPort: 443
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: '-1'
      VpcId:
        Ref: VPC
  ssmVPCEndpoint:
    Type: 'AWS::EC2::VPCEndpoint'
    Properties:
      VpcEndpointType: Interface
      ServiceName:
        'Fn::Join':
          - ''
          - - com.amazonaws.
            - Ref: 'AWS::Region'
            - .ssm
      VpcId:
        Ref: VPC
      SubnetIds:
        - Ref: PrivateSubnet1
      PrivateDnsEnabled: true
      SecurityGroupIds:
        - Ref: SgForssmVPCEndpoint
Parameters: {}
Metadata: {}
Conditions: {}
